{"version":3,"sources":["components/header/Header.js","components/option/Option.js","components/content/CountryCard.js","components/content/Content.js","pages/list/List.js","pages/details/DetailsCountry.js","pages/details/Details.js","theme/theme.js","App.js","reportWebVitals.js","index.js"],"names":["Container","styled","header","props","theme","components","color","Header","isDarkMode","handleTheme","to","onChange","checked","div","Option","handleFilter","handleRegion","useState","continent","setContinent","TextField","id","e","target","value","label","variant","FormControl","InputLabel","htmlFor","Select","native","event","inputProps","name","CountryCard","flag","population","capital","region","src","width","alt","displayType","thousandSeparator","article","defaultProps","section","Content","states","filter","country","toLowerCase","includes","map","main","List","setStates","setFilter","setRegion","useEffect","fetch","method","redirect","then","response","json","result","catch","error","console","log","Flag","img","CountryDesc","DescContent","DetailsCountry","nativeName","subregion","languages","currencies","symbol","Details","pays","setPays","useParams","lightTheme","body","darkTheme","GlobalStyle","createGlobalStyle","App","setIsDarkMode","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAkBA,I,EAAMA,EAAYC,IAAOC,OAAV,0VAKM,SAACC,GAAD,OAAUA,EAAMC,MAAMC,cAEjC,SAACF,GAAW,OAAOA,EAAMC,MAAME,SAW1BC,EAhCf,YAA2C,IAA1BC,EAAyB,EAAzBA,WAAYC,EAAa,EAAbA,YAC3B,OACE,eAACT,EAAD,WACE,cAAC,IAAD,CAAMU,GAAG,IAAT,sBACA,cAAC,IAAD,CACEC,SAAUF,EACVG,QAASJ,Q,oCC0BjB,I,EAAMR,EAAYC,IAAOY,IAAV,kMAQH,SAAAV,GAAK,OAAIA,EAAMC,MAAME,SACV,SAAAH,GAAK,OAAIA,EAAMC,MAAMC,cAI7BS,EA7Cf,YAA8C,IAA7BC,EAA4B,EAA5BA,aAAcC,EAAc,EAAdA,aAC7B,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAKA,OACE,eAAC,EAAD,WACE,cAACC,EAAA,EAAD,CAAWC,GAAG,iBAAiBV,SAAU,SAAAW,GAAC,OAAIP,EAAaO,EAAEC,OAAOC,QAAQC,MAAM,WAAWC,QAAQ,aACrG,eAACC,EAAA,EAAD,CAAaD,QAAQ,WAArB,UACE,cAACE,EAAA,EAAD,CAAYC,QAAQ,6BAApB,uBACA,eAACC,EAAA,EAAD,CACEC,QAAM,EACNP,MAAON,EACPP,SAZa,SAAAqB,GACnBb,EAAaa,EAAMT,OAAOC,OAC1BR,EAAagB,EAAMT,OAAOC,QAWpBC,MAAM,YACNQ,WAAY,CACVC,KAAM,YACNb,GAAI,8BAPR,UAUE,wBAAQ,aAAW,OAAOG,MAAM,KAChC,wBAAQA,MAAO,SAAf,qBACA,wBAAQA,MAAO,WAAf,yBACA,wBAAQA,MAAO,OAAf,kBACA,wBAAQA,MAAO,SAAf,oBACA,wBAAQA,MAAO,UAAf,kC,QC1BV,SAASW,EAAT,GAAgE,IAA1CC,EAAyC,EAAzCA,KAAMF,EAAmC,EAAnCA,KAAMG,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,QAASC,EAAQ,EAARA,OACrD,OACE,cAAC,EAAD,UACE,eAAC,IAAD,CAAM7B,GAAIwB,EAAV,UACA,qBAAKM,IAAKJ,EAAMK,MAAM,OAAOC,IAAI,KAC/B,gCACA,6BAAKR,IACL,8BAAG,kDAAH,IAAiC,cAAC,IAAD,CAAcV,MAAOa,EAAYM,YAAa,OAAQC,mBAAmB,OAC1G,8BAAG,+CAAH,IAA+BN,KAC/B,8BAAG,8CAAH,IAA8BC,aAMtC,IAAMvC,EAAYC,IAAO4C,QAAV,kVAKM,SAAA1C,GAAK,OAAIA,EAAMC,MAAMC,cAChC,SAAAF,GAAK,OAAIA,EAAMC,MAAME,SAc/B6B,EAAYW,aAAe,CACzBV,KAAO,wCACPF,KAAO,WACPG,WAAa,MACbE,OAAQ,OACRD,QAAU,cAGGH,I,EAAAA,ICdf,I,EAAMnC,EAAYC,IAAO8C,QAAV,oKASAC,EAtCf,YAA2C,IAAzBC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,OAAQX,EAAQ,EAARA,OAEhC,OACE,cAAC,EAAD,UACIU,GAAUA,EAAOC,QAAO,SAAAC,GACxB,OAAe,KAAXD,GAA4B,KAAXX,GAEA,KAAXA,GAAiBY,EAAQjB,KAAKkB,cAAcC,SAASH,EAAOE,gBAEjD,KAAXF,GAAiBC,EAAQZ,SAAWA,KAEpCY,EAAQZ,SAAWA,IAAUY,EAAQjB,KAAKkB,cAAcC,SAASH,EAAOE,kBALzED,KASRG,KAAK,SAAAH,GACN,OAAQ,cAAC,EAAD,CAEEjB,KAAQiB,EAAQjB,KAChBI,QAASa,EAAQb,QACjBD,WAAcc,EAAQd,WACtBD,KAAMe,EAAQf,KACdG,OAAQY,EAAQZ,QALXY,EAAQjB,YCQ/B,I,MAAMlC,EAAYC,IAAOsD,KAAV,+DAIAC,EA5Bf,WACE,MAA4BvC,mBAAS,IAArC,mBAAOgC,EAAP,KAAeQ,EAAf,KACA,EAA4BxC,mBAAS,IAArC,mBAAOiC,EAAP,KAAeQ,EAAf,KACA,EAA4BzC,mBAAS,IAArC,mBAAOsB,EAAP,KAAeoB,EAAf,KAaA,OAZAC,qBAAU,WAERC,MAAM,uCAAwC,CAC5CC,OAAQ,MACRC,SAAU,WAETC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAM,OAAIV,EAAUU,MACzBC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAI,QAASF,QACvC,IAIA,eAAC,EAAD,WACE,cAAC,EAAD,CAAQtD,aAAc2C,EAAW1C,aAAc2C,IAC/C,cAAC,EAAD,CAASV,OAAUA,EAAQC,OAAUA,EAAQX,OAAQA,Q,OCH3D,I,EAAMiC,EAAOvE,IAAOwE,IAAV,4BAEJC,EAAczE,IAAOY,IAAV,6GAOX8D,EAAc1E,IAAOY,IAAV,0CAIF+D,EAhCf,YAAmC,IAAVzB,EAAS,EAATA,QACvB,OACE,qCACI,cAACqB,EAAD,CAAMhC,IAAKW,EAAQf,KAAMM,IAAI,KAC/B,eAACgC,EAAD,WACE,6BAAKvB,EAAQjB,OACb,eAACyC,EAAD,WACE,8BAAG,mDAA+BxB,EAAQd,cAC1C,8BAAG,oDAAgCc,EAAQ0B,cAC3C,8BAAG,+CAA2B1B,EAAQZ,UACtC,8BAAG,kDAA8BY,EAAQ2B,aACzC,8BAAG,iDAA6B3B,EAAQ4B,UAAUzB,KAAI,SAAAhC,GAAC,gBAAOA,EAAEuD,WAAT,WACvD,8BAAG,iDAA6B1B,EAAQ6B,WAAW1B,KAAI,SAAAhC,GAAC,gBAAOA,EAAEY,KAAT,cAAmBZ,EAAE2D,wBCevF,I,EAAMjF,EAAYC,IAAOsD,KAAV,iKAUA2B,EAhCf,WACE,MAAwBjE,qBAAxB,mBAAOkE,EAAP,KAAaC,EAAb,KACAxB,qBAAU,WACRC,MAAM,yCAAD,OAA0CV,GAAW,CACxDW,OAAQ,MACRC,SAAU,WAETC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAM,OAAIiB,EAAQjB,MACvBC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAI,QAASF,QACvC,IAEF,IAAOlB,EAAWkC,cAAXlC,QAEP,OACE,cAAC,EAAD,UACGgC,GAAQ,cAAC,EAAD,CAAgBhC,QAASgC,EAAK,QCvBhCG,EAAa,CACxBC,KAAM,WACNlF,WAAW,UACXC,MAAM,SAGKkF,EAAY,CACvBD,KAAK,eACLlF,WAAW,gBACXC,MAAM,QC0BR,IAAMmF,EAAcC,YAAH,qEAEM,SAACvF,GAAkC,OAAzBmE,QAAQC,IAAIpE,EAAMC,OAAcD,EAAMC,MAAMmF,QAK9DI,EA5Bf,WACE,MAAoC1E,oBAAU,kBAAM,KAApD,mBAAOT,EAAP,KAAmBoF,EAAnB,KAEA,OACE,eAAC,IAAD,CAAexF,MAAOI,EAAYgF,EAAUF,EAA5C,UACE,cAACG,EAAD,IACA,eAAC,IAAD,WACE,cAAC,EAAD,CAAQjF,WAAcA,EAAYC,YAAamF,IAC/C,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,YAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,gBCfGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBhC,MAAK,YAAkD,IAA/CiC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f02493cf.chunk.js","sourcesContent":["import styled from 'styled-components'\nimport DarkModeToggle from 'react-dark-mode-toggle'\nimport { Link } from 'react-router-dom';\n\nfunction Header({isDarkMode, handleTheme}){\n  return(\n    <Container >\n      <Link to='/'>contries</Link>\n      <DarkModeToggle\n        onChange={handleTheme}\n        checked={isDarkMode}\n      />\n      \n    </Container>\n    )\n}\n\n\nconst Container = styled.header`\n  display:flex;\n  height:100px;\n  align-items:center;\n  justify-content:space-between;\n  background-color:${(props)=> props.theme.components};\n  padding:0 60px;\n  color:${(props) => {return props.theme.color}};\n  & a {\n    text-transform:capitalize;\n    font-variant-caps: small-caps;\n    cursor:pointer;\n    text-decoration:none;\n    color:inherit;\n    font-size:2em\n  }\n`\n\nexport default Header\n","import {  TextField, FormControl, Select, InputLabel } from '@material-ui/core';\nimport {useState} from 'react'\nimport styled from 'styled-components'\n\nfunction Option({handleFilter, handleRegion}){\n  const [continent, setContinent] = useState(\"\")\n  const handleChange = event => {\n    setContinent(event.target.value)\n    handleRegion(event.target.value)\n  }\n  return(\n    <Container>\n      <TextField id=\"outlined-basic\" onChange={e => handleFilter(e.target.value)} label=\"Contries\" variant=\"outlined\" />\n      <FormControl variant=\"outlined\" >\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Continent</InputLabel>\n        <Select\n          native\n          value={continent}\n          onChange={handleChange}\n          label=\"Continent\"\n          inputProps={{\n            name: 'continent',\n            id: 'outlined-age-native-simple',\n          }}\n        >\n          <option aria-label=\"None\" value=\"\" />\n          <option value={'Africa'}>Afrique</option>\n          <option value={'Americas'}>Amérique</option>\n          <option value={'Asia'}>Asie</option>\n          <option value={'Europe'}>Europe</option>\n          <option value={'Oceania'}>Océanie</option>\n        </Select>\n      </FormControl>\n    </Container>\n    )\n}\nconst Container = styled.div`\n  display:flex;\n  height:100px;\n\n  justify-content:space-around;\n  align-items:center;\n\n  .MuiInputBase-root {\n    color:${props => props.theme.color};\n    background-color:${props => props.theme.components};\n  }\n`\n\nexport default Option\n","import styled from 'styled-components'\nimport NumberFormat from 'react-number-format';\nimport { Link } from 'react-router-dom';\n\nfunction CountryCard({flag, name, population, capital, region}){\n  return(\n    <Container>\n      <Link to={name}>\n      <img src={flag} width='100%' alt=\"\" />\n        <div>\n        <h1>{name}</h1>\n        <p><strong>Population :</strong> <NumberFormat value={population} displayType={'text'} thousandSeparator={true}/></p>\n        <p><strong>Capital :</strong> {capital}</p>\n        <p><strong>region :</strong> {region}</p>\n        </div>\n      </Link>\n    </Container>\n    )\n}\nconst Container = styled.article`\n  display:flex;\n  flex-direction:column;\n  width:399px;\n  overflow:hidden;\n  background-color:${props => props.theme.components};\n  color:${props => props.theme.color};\n  box-shadow: 0 0 10px purple;\n  border-radius:5px;\n  & div{\n    padding: 12px;\n  }\n  & h1 {\n    margin-bottom:12px;\n  }\n  & a {\n    text-decoration:none;\n      color:inherit;\n  }\n`\nCountryCard.defaultProps = {\n  flag : \"https://restcountries.eu/data/khm.svg\" ,\n  name : \"Cambodge\",\n  population : \"15m\",\n  region :\"Asia\",\n  capital : \"Phnom Penh\"\n}\n\nexport default CountryCard\n","import styled from 'styled-components'\nimport CountryCard from './CountryCard'\n\n\nfunction Content({states, filter, region}){\n\n  return(\n    <Container>\n      { states && states.filter(country => {\n        if (filter === '' && region === '') {\n          return country\n        }else if (region === '' && country.name.toLowerCase().includes(filter.toLowerCase())){\n          return country\n        }else if (filter === '' && country.region === region ) {\n          return country\n        }else if (country.region === region && country.name.toLowerCase().includes(filter.toLowerCase())) {\n          return country\n        }\n        return false\n      }).map( country => { \n        return  <CountryCard \n                  key={country.name}\n                  name = {country.name} \n                  capital={country.capital}  \n                  population = {country.population}\n                  flag={country.flag}\n                  region={country.region}\n          /> \n      })}\n    </Container>\n    )\n}\n\nconst Container = styled.section`\n  margin:auto;\n  max-width:1800px;\n  display:flex;\n  flex-direction:row;\n  justify-content:center;\n  gap:20px;\n  flex-wrap:wrap;\n`\nexport default Content\n","import { useState, useEffect } from 'react';\nimport Option from '../../components/option/Option';\nimport Content from '../../components/content/Content'\nimport styled from 'styled-components'\n\nfunction List(){\n  const [states, setStates] = useState(\"\")\n  const [filter, setFilter] = useState(\"\")\n  const [region, setRegion] = useState(\"\")\n  useEffect(() => {\n\n    fetch(\"https://restcountries.eu/rest/v2/all\", {\n      method: 'GET',\n      redirect: 'follow'\n    })\n      .then(response => response.json())\n      .then(result => setStates(result))\n      .catch(error => console.log('error', error));\n  },[])\n\n\n  return(\n    <Container>\n      <Option handleFilter={setFilter} handleRegion={setRegion} />\n      <Content states = {states} filter = {filter} region={region}/>\n    </Container>\n    )\n}\n\nconst Container = styled.main`\n  min-height:calc(100vh - 100px);\n`\n\nexport default List\n","import styled from 'styled-components'\n\nfunction DetailsCountry({country}){\n  return(\n    <>\n        <Flag src={country.flag} alt=\"\" />\n      <CountryDesc>\n        <h1>{country.name}</h1>\n        <DescContent>\n          <p><strong>Population : </strong>{country.population}</p>\n          <p><strong>Native Name : </strong>{country.nativeName}</p>\n          <p><strong>Region : </strong>{country.region}</p>\n          <p><strong>Subregion : </strong>{country.subregion}</p>\n          <p><strong>Language : </strong>{country.languages.map(e => `${e.nativeName} `)}</p>\n          <p><strong>Currency : </strong>{country.currencies.map(e => `${e.name} - ${e.symbol}`)}</p>\n        </DescContent>\n          \n      </CountryDesc>\n    </>\n    )\n}\nconst Flag = styled.img`\n`\nconst CountryDesc = styled.div`\n  margin-left:15px;\n  & h1 {\n    font-size:3em;\n    margin-bottom:15px;\n  }\n`\nconst DescContent = styled.div`\n  columns:2;\n`\n\nexport default DetailsCountry\n","import { useState, useEffect } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport DetailsCountry from './DetailsCountry';\nimport styled from 'styled-components';\n\n\n\nfunction Details(){\n  const [pays, setPays] = useState()\n  useEffect(() => {\n    fetch(`https://restcountries.eu/rest/v2/name/${country}`, {\n      method: 'GET',\n      redirect: 'follow'\n    })\n      .then(response => response.json())\n      .then(result => setPays(result))\n      .catch(error => console.log('error', error));\n  },[])\n\n  const {country} = useParams()\n\n  return(\n    <Container>\n      {pays && <DetailsCountry country={pays[0]}  />}\n\n    </Container>\n    )\n}\n\nconst Container = styled.main`\n  display:flex;\n  justify-content:center;\n  align-items:center;\n  height:calc(100vh - 100px);\n  & > * {\n    height:300px;\n  }\n`\n\nexport default Details\n","export const lightTheme = {\n  body: 'lavender',\n  components:'thistle',\n  color:'black',\n}\n\nexport const darkTheme = {\n  body:'mediumpurple',\n  components:'rebeccapurple',\n  color:'snow',\n}\n","import { useState } from 'react';\nimport './App.css';\nimport Header from './components/header/Header';\nimport List from './pages/list/List'\nimport Details from './pages/details/Details'\nimport {ThemeProvider, createGlobalStyle} from 'styled-components';\nimport {lightTheme, darkTheme} from './theme/theme'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\n\nfunction App() {\n  const [isDarkMode, setIsDarkMode] = useState( () => false )\n\n  return (\n    <ThemeProvider theme={isDarkMode? darkTheme:lightTheme} >\n      <GlobalStyle />\n      <Router>\n        <Header isDarkMode = {isDarkMode} handleTheme={setIsDarkMode}/>\n        <Switch>\n          <Route path='/:country'>\n            <Details />\n          </Route>\n          <Route path='/'>\n            <List/>\n          </Route>\n        </Switch>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nconst GlobalStyle = createGlobalStyle`\n  #root{\n    background-color:${(props)=>{console.log(props.theme);return props.theme.body}}\n  }\n`\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}